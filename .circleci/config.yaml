jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Build
          command: |
            docker build \
              -t $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG \
              -t $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest \
              --cache-from $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest \
              .
            docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
            docker push $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
            docker push $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest
  deploy:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - run:
          name: Pulling new container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
              "docker pull $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG"
          name: Stopping old container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
              "docker stop my-app || true"
          name: Removing old container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
              "docker rm my-app || true"
          name: Deploying new container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
              "docker run -d -p 3000:3000 --name my-app $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG"

workflows:
  version: 2
  deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
      - deploy:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
