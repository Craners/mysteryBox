jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Build
          command: |
            docker build \
              -t $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest \
              --cache-from $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest \
              .
            docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
            docker push $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest

  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Pulling new container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            sudo docker pull $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest
      - run:
          name: Stop container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            sudo docker stop api || true

      - run:
          name: Remove container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            sudo docker rm api || true

      - run:
          name: Remove image
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            sudo docker image rm craners/mysterybox-api || true

      - run:
          name: Run the container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            sudo docker run -e FE_DOMAIN=$FE_DOMAIN -e appStoreTokenTest=$appStoreTokenTest -e APP_DOMAIN=$APP_DOMAIN -e APP_SCOPE=$APP_SCOPE -e SHOPIFY_API_SECRET_KEY=$SHOPIFY_API_SECRET_KEY -e SHOPIFY_API_KEY=$SHOPIFY_API_KEY --name api -d -i -t -p 3000:3000 $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest

workflows:
  version: 2
  deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v\d*\.\d*\.\d*$/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v\d*\.\d*\.\d*$/