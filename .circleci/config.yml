jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Build
          command: |
            docker build \
              -t $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest \
              --cache-from $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest \
              .
            docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
            docker push $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest

  deploy:
    machine: true
    steps:
      - checkout
      # - run:
      #     name: Remove container
      #     command: |
      #       ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
      #       sudo docker kill client && docker rm client

      - run:
          name: Pulling new container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            sudo docker pull $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest
      - run:
          name: Create env file 
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            echo SHOPIFY_API_KEY=$SHOPIFY_API_KEY >> .env \
            echo SHOPIFY_API_SECRET_KEY=$SHOPIFY_API_SECRET_KEY >> .env \
            echo APP_SCOPE=$APP_SCOPE >> .env \
            echo APP_DOMAIN=$APP_DOMAIN >> .env \
            echo appStoreTokenTest=$appStoreTokenTest >> .env \
            echo FE_DOMAIN=$FE_DOMAIN >> .env 
          environment:
            SHOPIFY_API_KEY: $SHOPIFY_API_KEY 
            SHOPIFY_API_SECRET_KEY: $SHOPIFY_API_SECRET_KEY 
            APP_SCOPE: $APP_SCOPE 
            APP_DOMAIN: $APP_DOMAIN 
            appStoreTokenTest: $appStoreTokenTest 
            FE_DOMAIN: $FE_DOMAIN 
      - run:
          name: Run the container
          command: |
            ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP \
            sudo docker run --env-file .env --name api -d -i -t -p 3000:3000 $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest

workflows:
  version: 2
  deploy:
    jobs:
      # - build:
      #     filters:
      #       tags:
      #         only: /^v\d*\.\d*\.\d*$/
      - deploy:
          # requires:
          #   - build
          filters:
            tags:
              only: /^v\d*\.\d*\.\d*$/